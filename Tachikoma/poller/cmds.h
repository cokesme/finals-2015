#ifndef CMDS_H
#define CMDS_H

#include "robotbattle.h"

typedef void (*CmdFuncPtr)(RobotStruct *RobotData, FunctionStruct *Func);

enum CommandEnum
{
    CMD_AssignMath,
    CMD_Name,
    CMD_Ahead,
    CMD_Back,
    CMD_AccelTarget,
    CMD_DecelTarget,
    CMD_SpeedTarget,
    CMD_BodyLeft,
    CMD_BodyRight,
    CMD_GunLeft,
    CMD_GunRight,
    CMD_RadarLeft,
    CMD_RadarRight,
    CMD_Stop,
    CMD_StopMove,
    CMD_StopRotate,
    CMD_Continue,
    CMD_Scan,
    CMD_Fire,
    CMD_SyncAll,
    CMD_SyncGun,
    CMD_LockAll,
    CMD_LockGun,
    CMD_EndTurn,
    CMD_Stall,
    CMD_Suicide,
    CMD_RegAScan,
    CMD_RegCldRobot,
    CMD_RegCldMissile,
    CMD_RegCldWall,
    CMD_RegCore,
    CMD_RegDtcRobot,
    CMD_RegDtcWall,
    CMD_RegPing,
    CMD_AScanEvents,
    CMD_CldWallEvents,
    CMD_CldRobotEvents,
    CMD_CoreEvents,
    CMD_DtcRobotEvents,
    CMD_DtcWallEvents,
    CMD_PingEvents,
    CMD_CldMissileEvents,
    CMD_Blocking,
    CMD_WaitFor,
//    CMD_GoSub,
//    CMD_Return,
    CMD_If,
    CMD_ElseIf,
    CMD_Else,
    CMD_EndIf,
    CMD_While,
    CMD_Break,
    CMD_Next,
    CMD_EndWhile,
    CMD_Abs,
    CMD_Max,
    CMD_Min,
    CMD_Round,
    CMD_Truncate,
    CMD_GetTime,
    CMD_GetRandom,
    CMD_IsEqual,
    CMD_Print,
    CMD_Add,
    CMD_Sub,
    CMD_Modulus,
    CMD_Multiply,
    CMD_Divide,
    CMD_Exponent,
    CMD_And,
    CMD_Or,
    CMD_Equals,
    CMD_LessThan,
    CMD_LessThanEqualTo,
    CMD_GreaterThan,
    CMD_GreaterThanEqualTo,
    CMD_NotEqual,
    CMD_Cos,
    CMD_Sin,
    CMD_Tan,
    CMD_ACos,
    CMD_ASin,
    CMD_ATan,
    CMD_ATan2,
    CMD_Jmp
};

extern CmdFuncPtr CmdList[];

#endif
